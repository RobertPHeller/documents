   We have through though the hard problems:

    

    1. Easy to understand for the novice, the non-geeks:

     * No need to remember pin, board, channel, node, device addresses or numbers.  

     * Easy to configure with push-buttons.  

     * But, all devices are compatible, from the smallest layout to the largest

    1. Works with very large layouts:

     * Multi-segment buses, using CAN, Ethernet and other hardware.

     * Easy and auto configuration of changing module layout.

     * Never any device address conflicts.  

    1. Can control complex operations:

     * Flexible and complete messaging protocol.  

     * Auto-routing and filtering of messages, so only those nodes that want to know receive the messages.
        

    

    

   Easy to understand for the novice, the non-geeks:

   No need to remember pin, board, channel, node, device addresses or numbers.  

   Easy to configure with push-buttons.  

   But, all devices are compatible, from the smallest layout to the largest

   Works with very large layouts:

   Multi-segment buses, using CAN, Ethernet and other hardware.

   Easy and auto configuration of changing module layout.

   Never any device address conflicts.  

   Can control complex operations:

   Flexible and complete messaging protocol.  

   Auto-routing and filtering of messages, so only those nodes that want to know receive the messages.  

    

   OpenLCB

    

   We have thought through the hard problems:

    1.  

   Easy to understand for the novice, the non-geek:

    

     * No need to remember pin, board, channel, node, device addresses or numbers.  

     * Easy to configure with push-buttons.  

     * But, all devices are compatible, from the smallest to the largest layout

    

   Works with very large layouts:

    

     * Multi-segment buses, using CAN, Ethernet and other hardware.

     * Easy and auto configuration of changing module layout.

     * Never any device address conflicts.  

   Complex operations:

    

     * Flexible and complete messaging protocol.  

     * Auto-routing and filtering of messages, so only those nodes that want to know receive the messages.
        

   a part assigned byt the device.  

   A fixed part derived from a node-id, or other unique number, and  

   Similarly, OpenLCB's large event-id is made up of two parts:

   a part assigned that person or group.  

   A part assigned to an individual, group or manufacturer, and

   OpenLCB's large node-id is made up of two parts:

   Segment 1

   Segment 2

   Routing and filtering

   The 'larger network”
