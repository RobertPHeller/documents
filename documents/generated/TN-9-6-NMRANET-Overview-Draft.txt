                                              Executive Summary

   This document provides an overview of the NMRAnetTM layout control bus. NMRAnet is intended to control
   the operation of accessories and trains on a model layout.  Further details will be available in other
   Standards and Recommended Practice documents in the 9.6 group. This proposal for NMRAnet S9.6 has been
   developed by the OpenLCBTM group via their web site at http://openlcb.org/ and discussion group at
   http://groups.yahoo.com/group/OpenLCB. References here to "NMRAnet" refer to this proposal.

   Guiding Principles and Design Philosophy:

     * Robust yet cost effective, easy to use, plug-n-play, but allows analysis and diagnostics

     * Suitable from novice to aggregate and museum layouts.

     * Top-down design with bottom-up implementation reality-checks.

     * Elegance and uniformity that can be applied across multiple networking technologies.

     * Maintain manufacturer choice of implementation, and for further development.

     * Use of existing standardized and commodity hardware/software

     * No requirement for a PC or complicated tools for simple layouts, but the ability to use these as the
       layout expands.

     * Design for the future and do not focus solely on current technology choices.

     * Standards conformance validation must require minimal effort.

    

   NMRAnet defines a set of Common Messages that include: Consumer-Producer Events; Datagram  messages; and
   Streams that are media and transport agnostic. In addition, NMRAnet  defines specific application of
   these Common Messages to Media-Specific Messages on a variety of transports, including but not exclusive
   to: CAN, Ethernet, and wireless.

    

   NMRAnet is designed to use one or more net-segments which may involve one or more media.  NMRAnet allows
   the ease of use to implement a novice-layout involving only one segment, to very large layouts involving
   many segments.  This is accomplished by defining both simple messaging for use on small layouts, but
   also more sophisticated mechanisms such as  routing, which allow very large layouts to function.

                                                 Introduction

   This document provides an overview of the NMRAnet layout control bus that is intended to control the
   operation of accessories and trains on a model layout. Other Standards and Recommended Practice
   documents in the 9.6 group describe NMRAnet in more detail. This document is intended to give the reader
   a good appreciation of the main features and benefits of the NMRAnet 9.6 design. Please note that
   NMRAnet is still in the design and prototyping phase. To assist in that, we describe the NMRAnet design
   in sufficient detail for others to review and comment on the work to date. This document should be
   considered a draft.

                                   Guiding Principles and Design Philosophy

   While this document is meant to be an overview or summary of NMRAnet it still contains a lot of higher
   level details. So here is a list of the guiding principles and design philosophy we have used:  

     * The NMRAnet must be robust yet cost effective, easy to use, plug-n-play, provide means to to attach
       a network monitoring tool to analyze behavior and diagnose faults.

     * A single system that is suitable for novices, yet can work for large modular meets and museum
       layouts.

     * The top-down design with bottom-up implementation reality checks.

     * Elegant structure and uniformity that can be applied across multiple networking technologies.

     * Openness for manufacturer choice of implementation, and for further development. No fixed media,
       microcomputers, etc.

     * Use of existing standardized and commodity hardware/software: Consumer/Producer; CAN, Wireless,
       Ethernet TCP/IP, routing, etc.

     * Configuration and running must not require a PC or complicated tools for simple layouts. However as
       the layout expands and more complicated configuration choices are made, the system should be able to
       simply expand, without requiring the user to reconfigure existing devices or even start over.

     * Designed for the future and not focused solely on current technology choices. A good NMRAnet design
       should last many years despite changes in networking technologies over that time. The design needs
       to be adaptable to exploit new technologies as they develop.

     * Validation of standards conformance must require minimal effort, yet be comprehensive.

   When considering the choices commonly available for initial implementation we cannot ignore the CAN 2.0
   (ISO 11989-*) networking technology from Bosch, as it is a very robust and accessible technology in
   8-bit microprocessors. NMRAnet defines how to use CAN as an effective low-cost interconnection. To run a
   layout in the manner similarly to what  can be done now using DCC vendor equipment, CAN is very adequate
   and can handle those duties fine.  However it has very limited frame sizes (only 11 bytes), bandwidth,
   and maximum number of nodes, so it can't do everything needed by advanced model railroaders. We have
   therefore deliberately not limited ourselves to what can be done on CAN networks because, in the
   expected life of NMRAnet, other networking technology choices (particularly wireless) will become
   commodities, and therefore good candidates for NMRAnet.

   Also, we have not tried to overly minimize the sizes of the data items in the NMRAnet messages. We have
   deliberately made Node Ids (48-bits) and Event Ids (64-bits) outrageously large. This choice was to
   minimize the NMRA management overhead required to manage the allocation of globally unique node
   addresses and also provide a way to then generate globally unique Event Ids. This  greatly simplifies
   the way modular layout clubs configure their systems, as modules can be arranged in any combination,
   and, with purpose-built configuration tools, even that can be substantially automated.

   While these choices do have a system resource impact, our design pushes the bulk of the additional
   resource requirements into the gateway nodes as they are likely to be few in number, and likely none for
   many layouts.   Gateways will likely to be PCs, or that class of device, anyway so that the resource
   impact on small CAN based nodes should be minimal, and design decisions reduce the overhead for these.
     

                                               What is NMRAnet?

   NMRAnet defines a family of inter-operating protocols for controlling model railroads. It is structured
   around some common core concepts and separate implementations. The NMRAnet will be capable of supporting
   Accessory Control, Advanced Locomotive Control and even Multimedia and Rich Text features on the higher
   bandwidth networks. This protocol proposal will focus on NMRAnet Accessory Control with emphasis on CAN
   2.0B, but allowance has to be made for simple Locomotive Control and implementation of the NMRAnet
   protocol on other network technologies like Ethernet, WiFi and other wireless networking technologies,
   and the global Internet.

   This proposal is based on a series of use-cases (see the Use Cases section) that start with a novice
   modeler connecting up two boards and extend to huge modular layouts put together by several clubs. To
   achieve this range, and to allow for future technologies, NMRAnet is defined so that it can communicate
   via multiple media.  These include CAN, Ethernet and WiFi.  In addition, NMRAnet software running in a
   computer are considered valid, albeit virtual, NMRAnet nodes.

                              Key Features of the NMRAnet 9.6 Protocol Proposal

   The key features of this proposal are:

     * The basic communicating unit is called a "Node". A node might be a single board, or a single program
       in a PC, or any other addressable item. A node may control any number of actual devices on a layout.
       Nodes exchange messages to control the layout.

     * At it's basic level, NMRAnet defines a transport layer for several types of data:

          * Events - Fixed length identifiers that can propagate from multiple source nodes to multiple
            destination nodes.

          * Datagrams– These are used for configuration and other protocols that require messages to be
            sent to specific nodes.  Use will likely include throttle and train control messages,  

          * Streams - An efficient way to move a large, variable number of bytes from one node to another.

       This transport level also has provision for interconnection of independent NMRAnet segments and
       filtering of messages to reduce traffic.

     * NMRAnet defines a global set of common message types and their content, and specifies how the common
       message types are to be used for standard and optional interactions.

     * The format of the common messages is separately specified for each of several wire protocols. The
       initial wire protocols are CAN and TCP/IP point-to-point; additional ones are envisaged. NMRAnet
       wire protocols may define additional interactions and messages for specific transport-level uses,
       e.g. for housekeeping on the local connection.

     * The NMRAnet as a whole is comprised of one or more segments interconnected with repeater, bridge or
       gateway devices that ensure all nodes are able to communicate.  

     * Every node has a 48-bit "Node ID number" (NID) which is assigned to assure that it is globally
       unique.  NID ranges are assigned to distributed to manufactures, groups and individuals by a method
       described in detail in another document.  Each manufacturer that has a NMRA DCC Manufacturer ID will
       have a 24-bit address space allocated for their exclusive use. Large clubs or societies like the
       NMRA, MERG, FREMO, NTRAK, oNeTRAK etc will be issued a large number range, which the group can then
       subdivide, likely by a membership number.  Therefore,  each member of these groups will be
       automatically allocated NIDs for their own use in DIY-built nodes. In addition, groups or
       individuals may also request a additional ranges of NIDs, if these are required.

     * The NMRAnet is a flat structure, where all nodes are equally accessible and addressable. There is no
       hierarchy of nodes, node aggregation, tree structures, or segmentation that necessarily filters
       NMRAnet traffic.

     * Athough all NMRAnet nodes have the potential to see all NMRAnet messages, the protocol uses
       interest-based routing.   This is an effective way to reduce network traffic in large NMRAnets with
       many interconnected network segments.  NMRAnet gateway nodes dynamically learn which nodes on which
       segments are interested in specific events, and only send those events to these segments.

     * The Source-node's ID is included in every NMRAnet message, and therefore each message can be traced
       back to its the originator node.  

     * Above the basic transport level, NMRAnet defines methods for:

          * Event transfer for layout control

          * Datagram transfer for small amounts of point-to-point data

          * Stream transfer for large or continuous point-to-point data

          * Node configuration

          * Locomotive Control (although not currently part of the protocol specification)

                                           NMRAnet Network Topology

   A layout with a NMRAnet will require at least one NMRAnet network segment with two Nodes as in the
   example shown in the diagram below.

   graphics4

   The diagram shows CAN as the transport, but it could also be Wireless, Ethernet ,WiFi and is likely to
   be a combination of several technologies. A layout may have, for example, a lengthy CAN based NMRAnet
   segment with many nodes, running around the entire layout and have a comparatively short Ethernet
   segment that provides a convenient connection to a single PC. It is likely that entry level NMRAnet
   compatible DCC Command Stations will just have a CAN NMRAnet interface and a USB PC interface. Medium
   level DCC Command Stations might add Ethernet and Wireless interfaces whereas top end DCC Command
   Stations may also add WiFi. It is also likely that manufacturers will provide various interface devices
   (repeaters, bridges or gateways) to link each of the NMRAnet segment types like CAN to Ethernet and/or
   CAN to USB (for PC access), and CAN to Wireless and/or Ethernet to Wireless (for wireless throttles).
   WiFi interfaces are likely to use consumer grade Ethernet to WiFi Access Points but some markets may opt
   for a WiFi interface in the DCC Command Station.

   Each segment of a NMRAnet is by default transparently connected to all other segments. A single CAN
   cable would be a NMRAnet segment, as would two CAN cables connected by a repeater or bridge. An Ethernet
   link would also be a segment, as would TCP/IP network connections.

    

   Two or more segments can be connected by repeater or bridge devices as shown in the diagram below.

   graphics3

   Simple repeater or bridge devices do not filter any messages and all messages are forwarded to all other
   segments. More intelligent interconnection devices can reduce required bandwidth by filtering messages
   that are not needed on other segments, these are called gateways.

   graphics2

   As an example, a CAN segment with a number of nodes can be connected via a CAN-USB or CAN-Ethernet
   bridge to a PC running several separate control programs. As another example, a CAN segment in a series
   of modules can be connected via a gateway to an Ethernet backbone, which in turn connects via several
   other gateways to other CAN segments in other collections of modules. Several PCs can be connected via
   the Ethernet and interact with all the modules via the individual CAN segments.  Producer/Consumer
   Events

   The NMRAnet makes use of stateless messages called Events, which are part of a model formally called
   “The Consumer-Producer Model”.  This is a relatively new and powerful concept that is well established
   in the industrial control industry.  In it a producer-node reacts to a change in its environment by
   producing (sending) an Event-message.  Similarly, a consumer-node consumes (receives and processes) this
   message and causes some Action to happen.  For example, depressing a push-button would cause the node to
   which it is connected to produce an Event, and, on receiving this message, a consumer-node would cause
   its attached turnout to move to a new position.

   Events are used to allow multi-node to multi-node interactions.  One or more nodes can produce any
   particular Event, and none or more nodes can consume to that Event.  

   The Producer-Consumer model has some specific details that need to be stressed.  Events indicate only
   that a change has occurred, but do not carry state information --- no information as to what changed can
   be inferred from the Event.  Similarly, the eventual Action(s) cannot be inferred from the Event.  The
   Event represents an abstract concept, rather than carrying actual information.  For example, an Event
   might represent “Night-time running”, and it could be produced by one or more of: a push-button; a
   timer; or a program in a computer, while it might be consumed by nodes that control: street-lights;
   station-displays or even automated train-routers. While this might seem limiting, the abstract nature of
   Events allows them to be very flexible and powerful, as they can link any consumer to any producer.
     This means that users can pretty much do what they like and not be constrained by the conventional
   control expectations like controlling a turnout position only from a toggle switch. For instance you
   could control a turnout position from the time of day clock that produces different Events at different
   times, and also use those same events to control room and layout lighting.

   The diagram below shows how Events from various push buttons and turnout controllers are able to be
   configured to Produce and Consume different Events to effect a route selector complete with route and
   button locking.

   graphics1

                                   Node-Resident Configuration Definitions

   All NMRAnet nodes will contain a compressed document in standard form that contains all the relevant
   information needed by an external Configuration Tool (CT) to know how to configure the node. CTs can use
   that informatoin to provide some form of suitable Graphical User Interface to allow the user to easily
   and intuitively configure all aspects of the node's capabilities. An important design choice was to
   embed this information into each node so that the system has all it needs to configure the node without
   having to source some file external to the NMRAnet from the manufacturer or some other on-line
   repository via the Internet or a CD/DVD etc. While the CT is likely to be a program running on a PC, it
   could be a hand-held device like mobile phone or PDA or even a custom built CT.  

                                      CAN Node Id Alias Self Assignment

   Because of the small CAN frame sizes it is not possible to fit a 48-bit Source Node Id (SID) into an
   11-byte Extended CAN 2.0 frame and have much space left for anything else. So to make NMRAnet work on
   CAN we have used a shortened form of the NID called an Node Id Alias or NIDa. This is a 12bit number
   that is dynamically assigned at system start-up by each node using its NID as a seed to create a
   proposed 12-bit Node Id Alias.  The node then probes the CAN bus with a sequence of CAN frames to ensure
   that no other node is using the same Node Id Alias.  In the common case of a collision, the involved
   nodes back off and attempt the algorithm again with new Node Id Alias values.  Because nodes have unique
   Node Id values, this algorithm is guaranteed to converge to non-conflicting aliases even when very large
   networks are simultaneously powered-up.  This property has been confirmed by analysis, simulation and
   prototyping.

                                                  Use Cases

   The table below describes the Use Cases that were and are being considered for the NMRAnet design.

                                A model railroader wants to learn about NMRAnet. He buys two inexpensive    
                                boards at his local hobby shop. He connects them on his layout to two       
   Entry Level User             pushbuttons and a turnout motor, does a simple configuration, and is able   
                                to control the turnout with the pushbutton. No other boards or tools are    
                                needed.                                                                     
                                A user has four NMRAnet boards working on his layout. He buys one more      
                                input board to provide extra pushbuttons to operate his yard ladder from    
   Expanding A Small Layout     the other end of the layout. He's able to configure the new board and put   
                                it into operation. He doesn't have to reconfigure any of the existing       
                                boards, nor does he need records of his configuration nor a configuration   
                                tool.                                                                       
                                A user has twelve NMRAnet boards operating. Something changes, and the      
                                system is no longer reliable. Certain operations no longer work, and others 
                                only work sometimes. The user attempts some debugging steps using features  
   Mid-size Layout Problem      of the existing hardware, but is unable to locate the problem, so           
                                buys/borrows a diagnostic device. The device is able to track all traffic   
                                on the network, interrogate each existing board, and in general indicate    
                                where the problem lies.                                                     
                                A model railroad has 40 NMRAnet boards controlling a large layout. To       
                                upgrade a major yard, the user wants to replace 12 boards with new ones     
   Large Layout Upgrade         that offer new (non-NMRAnet) features. He captures the existing setup,      
                                replaces old boards with new ones, configures the equipment and is back in  
                                operation. No reconfiguration of non-replaced boards is required.           
                                A model railroad has turnouts and signals controlled via NMRAnet. The owner 
                                wants to put a physical control panel in his house, a separate building,    
                                and operate it via NMRAnet. He adds a gateway board to his existing         
   Distant Control Panel        NMRAnet, which communicates over his existing home wired or wireless        
                                network with another gateway board in the other building.  That second      
                                gateway drives a small CAN network attached to the nodes that drive the     
                                control panel.                                                              
                                A large model using CAN, but not any attached computers, grows enough that  
                                it needs to have another CAN segment. A new segment is added, connected by  
   Large Layout Expands         a bridge to the first. It is not necessary to reconfiguring any the         
                                existing nodes, nor is it necessary to check for address or event conflicts 
                                in the new hardware.                                                        
                                The user wants to run multiple programs from multiple vendors in his home   
   Connect Multiple Programs    computer that simultaneously connect to the layout NMRAnet and              
                                control/monitor it. The computer is connected to the NMRAnet via a USB or   
                                Ethernet connection.                                                        
                                A model railroad has turnouts and signals controlled via NMRAnet. NMRAnet   
   Remote Dispatcher            is used to install a CTC panel at a distant location. The panel could be    
                                either a physical panel or on a computer screen.                            
                                A modular club has fifty modules, each of which as a CAN NMRAnet with three 
                                or four nodes controlling the module. These modules are separately built,   
                                with no central administration. They are brought to a central location for  
                                a meet, where they are all bolted together in some pre-planned orientation. 
   Modular Layouts              Some NMRAnets are connected together electrically via CAN jumper cables,    
                                and others are connected to a central Ethernet. The resulting single        
                                NMRAnet instance can operate the entire layout from both central and        
                                distributed locations. No conflicts between modules and/or nodes need to be 
                                resolved.                                                                   
                                A club layout is operated via NMRAnet. There's something not quite right    
   Remote Diagnostics           about the signaling, and one of the members wants to check the operation of 
                                the signals. He makes a remote connection to the layout and checks the      
                                status and configuration of the hardware from his home computer.            
                                Dozens of clubs put together dozens of NMRAnet segments and hundreds of     
                                modules that have been separately configured. A large FREMO meet would be   
                                an example. Collision avoidance: EventIds, NodeIds that are already         
   Aggregation of Modular Clubs configured into the modules should already be unique. Conventions and/or    
                                tools for connecting events across the boundaries are available so that     
                                e.g. signaling systems can work with adjacent modules they've never met     
                                before. Automated monitoring tools can see traffic on the entire network.   

                                              Typical Equipment

   The table below describes the typical equipment that is likely to exist on a NMRAnet equiped layout.

   Simple Board           Low cost, low engineering complexity is important.                                
   Multiple I/O Board     Higher cost/complexity board that can do multiple input and output functions.     
   Simple Diagnostic Tool A simple diagnostic tool that can plug into a CAN segment and provide limited     
                          information. Not based on a computer.                                             
   Computer-CAN Interface Inexpensive module to allow any type of home computer to attach to a CAN segment  
                          and interact.                                                                     
   Ethernet-CAN Interface Module to allow a CAN segment on e.g. a module to be connected to an Ethernet     
                          backbone without requiring a local computer.                                      
   CAN bridge             Low cost module to connect two CAN segments for greater length or more attached   
                          nodes.                                                                            

                                      Glossary of Terms used in NMRAnet

Common Terms

                             Short form of a Node ID number which can be mapped back and forth to the full  
   Alias                     number. Often used as "NID Alias", "DID Alias" or "SID Alias"", which are then 
                             written NIDa, DIDa and SIDa.                                                   
                             Not really something that occurs in NMRAnet itself, we need to talk about how  
   Board                     the common term "board" maps onto NMRAnet. E.g. A node (board) may connect to  
                             several things (devices) on the layout.                                        
                             Connects two NMRAnet segments with minimal changes to the content of the       
                             messages. For example, a bridge between two CAN segments would allow more      
   Bridge                    nodes to be attach to the combined segments as if they were one; a bridge      
                             between a CAN segment and Ethernet segment would transform message format, but 
                             transfer every message.                                                        
                             Not really something that occurs in NMRAnet itself, we need to talk about how  
   Device                    the common term "device" maps onto NMRAnet. E.g. A node (board) may connect to 
                             several things (devices) on the layout.                                        
   DID                       Destination Node ID - Node ID of the node to which a specific message is       
                             addressed.                                                                     
                             NMRAnet allows nodes to notify each other when specific "events" occur on the  
                             layout. These in turn can cause nodes to take particular actions. Events are   
   Event                     not necessarily attached to a producer ('Button 2 pressed') or attached to a   
                             consumer ('Turn off light 4'), but rather to an overall state change ('Set for 
                             nighttime operation'). This is called a "Producer/Consumer model".             
                             A 64-bit number that identifies a specific Event. NMRAnet Event IDs must be    
                             globally unique.                                                               
   Event ID (EID)                                                                                           
                             Events are not associated with any particular node. It may be convenient to    
                             use e.g. Node ID as a way of numbering them uniquely, but Node IDs and Event   
                             IDs are not related.                                                           
                             Connects two segments of the NMRAnet, optionally suppressing messages that are 
   Gateway                   known to be not relevant to the far segment. If needed, so translation from    
                             one message form to another.                                                   
   Installation              An NMRAnet installation is the complete set of NMRAnet hardware, nodes, etc,   
                             that can be reached from any one of them.                                      
                             Unit of addressability for the network. Every NMRAnet interaction originates   
   Node                      in a node. Every board that connects to NMRAnet is at least one node. For      
                             example, a simple turnout controller board is one node, while a PC with        
                             multiple programs running may contain several nodes.                           
   Node ID (NID)             A 48-bit number identifying a specific node. NMRAnet node IDs must be globally 
                             unique, so they form a one-to-one mapping to the nodes themselves.             
   Message                   The basic unit of NMRAnet communication.                                       
   MTI                       Message Type Indicator - identifies a common message type. (This term is still 
                             under discussion)                                                              
                             The mechanism whereby Producer or sending Nodes notify interested Consumer or  
   Producer / Consumer Event listener Nodes that  particular layout events, state changes or control        
    Model                    actions have occurred by generating an Event. The Event is simply a NMRAnet    
                             Message that contains an Event Id or EID, which is simply a unique number that 
                             signals the defined event has occurred.                                        
   Repeater                  Connects two segments of the same type at the physical level, without          
                             transformation of message format                                               
                             Rare in NMRAnet, these transform one address space into another. For example,  
   Router                    these change EventIDs on one side of the Router into another set of EventIDs   
                             on the other side.                                                             
   SID                       Source Node ID - Node ID of the node which originated a specific message.      
                             Subset of an overall NMRAnet installation which is reached via one or more     
   Segment                   translators and/or gateways. A segment typically uses a specific wire          
                             protocol.                                                                      
   Stream                    Streams are a method of moving a large number of bytes between two nodes.      
                             Version of the NMRAnet common messages, interactions, etc adapted to a         
   Wire Protocol             particular transport mechanism. Examples are the wire protocols for CAN bus    
                             segments and TCP/IP links.                                                     

Wire Protocol Terms

   Packet A Packet is a single transmission on a NMRAnet segment. 

    

CAN Wire Protocol Terms

   Frame A Frame is packet as it is defined on the CAN bus. It consists of a 11 or 29 bit CAN header and    
         zero through 8 bytes of data.                                                                      

    

   Table of Contents

   Executive Summary

   Introduction

   Guiding Principles and Design Philosophy

   What is NMRAnet?

   Key Features of the NMRAnet 9.6 Protocol Proposal

   NMRAnet Network Topology

   Node-Resident Configuration Definitions

   CAN Node Id Alias Self Assignment

   Use Cases

   Typical Equipment

   Glossary of Terms used in NMRAnet

   Common Terms

   Wire Protocol Terms

   CAN Wire Protocol Terms

    
