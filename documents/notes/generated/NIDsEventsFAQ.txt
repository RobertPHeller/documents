   48 bit Node-IDs (NIDs) and 64-bit Events FAQ

    

   Why have you chosen such large node-ids and events?

    

   In order to prevent conflicts and confusion, node-ids and events must to be globally unique, even in the
   face of absent nodes during configuration.  The easiest way to do this is by having a large enough
   id-space that global uniqueness can be assured easily.   This allows disparate clubs to meet and combine
   their modules without conflicting NIDs or Events.  

    

   Are there any other advantages of large node-ids and events?

    

   Yes, in addition to the above, large NIDs and Events allow easier integration of legacy systems.  These
   systems'  id and event-equivalents can be used to construct globally  unique NIDs and Events.    For
   example, Loconet turnout commands can be used to construct unique Events by pre-pending the
   Loconet-NMRAnet gateway's NID to the command number.  

    

   Why not chose shorter ids and events?

    

   While shorter ids and events are attractive in the short term, they introduce intractable problems, such
   as limiting interconnectivity of nodes which have been configured separately, difficulties in
   guaranteeing global uniqueness and difficulty in routing.  

    

   Why not  intermix short and long ids and events and let users chose which they want to use?

    

   This would cause confusion between the two standards and add complexity to achieve interconnectivity
   between the two.  It is much simpler to maintain one standaed throughout.  However, for the CAN
   implementation of NMRAnet, we have defined NID aliases which are 16-bits to compensate for CAN's short
   packet length.           

    

   These take up a large amount of space, how can small nodes afford this?

    

   This appears that this is space inefficient -- however, a large id-space solves a lot of problems that
   are difficult to solve with a smaller space, and will likely reduce the overall size of the system code.
    Simple nodes should have simple needs for Events and actions, and should be able to handle large NIDs
   and Events.  In addition, technology advances will quickly mitigate the lack of space in
   microprocessors.   Moore's Law suggests that microprocessor ability doubles every two years, therefore
   four years from now microprocessors will handle 64-bit events as easily as 16-bit events are handled
   today.   Already microprocessors such as ARM7 have 128k flash, 34k RAM, Ethernet, and Can for $7/100.  

    

   How are these 'unique' ids and events assigned?  

   There are several ways to assign a unique NID to a node, for example: (1) A manufacturer can assign a
   unique NID from the list assigned to it by the NMRA; (2) A club can assign a NID from its list of
   assigned numbers; (3) A club member can assign a NID from his/her list assigned by the club; (4) A user
   can assign an NID assign to him/her by an automated NID-assignation website.   Similarly, an event can
   be assigned in several ways, for example: (1) A node can pre-pend its NID to a 16-bit event number; (2)
   A user can assign a NID from his/her list; (3) Software can assign a unique event by
   constructive-methods.  
